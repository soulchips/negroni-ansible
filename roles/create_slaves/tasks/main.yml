---

- name: Create security group
  ec2_group:
    name: "{{ project_name }}_security_group"
    description: "{{ project_name }} security group"
    region: "{{ region }}"
    rules:
      - proto: tcp  # ssh
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # JMeter communication
        from_port: 1099
        to_port: 1099
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # JMeter communication
        from_port: 50000
        to_port: 50000
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # JMeter communication
        from_port: 60000
        to_port: 60000
        cidr_ip: 0.0.0.0/0
      - proto: icmp
        from_port: -1
        to_port:  -1
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: jmeter_firewall


- name: Create slave EC2 instances
  ec2:
    key_name: "{{ project_name }}-{{ env }}-key"
    region: "{{ region }}"
    group_id: "{{ jmeter_firewall.group_id }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    wait: yes
    instance_tags:
        class: "{{ branch }}-slave"
    count_tag:
        class: "{{ branch }}-slave"
    exact_count: "{{ slave_count | default('2') }}"
    vpc_subnet_id: subnet-86bf9aee
  register: ec2

- name: Add to slave group
  local_action: "lineinfile dest={{ hostpath }} insertafter=\"slaves\" line=\"{{ item.public_ip }} ansible_ssh_private_key_file={{ project_path }}/keys/aws-private.pem ansible_ssh_user={{ app_code_user }}\""
  with_items: '{{ ec2.instances }}'

- wait_for: 'path={{ hostpath }} search_regex={{ hoststring }} timeout=120'

- name: Store slave instance IDs
  local_action: "lineinfile dest=slaveIDs line=\"{{ item.id }}\""
  with_items: '{{ ec2.instances }}'

- name: Store ID in all ID file
  local_action: "lineinfile dest=allInstanceIDs line=\"{{ item.id }}\""
  with_items: '{{ ec2.instances }}'

- name: 'Wait for instance to initialize to SSH'
  wait_for: 'host={{ item.public_dns_name }} port=22 delay=60 timeout=360 state=started'
  with_items: '{{ ec2.instances }}'

- name: 'Refresh hostfile so Ansible uses latest version'
  meta: refresh_inventory


